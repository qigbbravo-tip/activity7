- hosts: elkserver
  remote_user: ubuntu
  become: yes
  become_user: root
  roles:
  - { role: java }
  - { role: elasticsearch }
  - { role: kibana }
  - { role: metricbeat }

- hosts: all:!switches:!oobserves:!idrac:!supermicro_6048r:!supermicro_6018r:!supermicro_1028r:!devices:!dns_only
  remote_user: "{{ ansible_system_user }}"
  tasks: []

- hosts: all:!switches:!oobserves:!nagios:!idrac:!supermicro_6048r:!supermicro_6018r:!supermicro_1028r:!freenas:!devices:!dns_only
  remote_user: "{{ ansible_system_user }}"
  roles:
    - { role: nagios_client }
    - { role: firewall_client, when: manage_firewall_client|bool }

- hosts: nagios
  remote_user: "{{ ansible_system_user }}"
  roles:
    - { role: nagios }
    - { role: firewall, when: manage_firewall|bool }
    - { role: instructions }

- hosts: HOST
  vars:
    grafana_version: 2.5.0
    arch: amd64
    grafana_filename: grafana_{{ grafana_version }}_{{ arch }}.deb


  tasks:
  - name: Verify version
    command: dpkg-query -W --showformat='${version}' grafana
    register: grafana_check_version
    failed_when: grafana_check_version.rc > 1
    changed_when: (grafana_check_version.rc == 1) or 
                  (grafana_check_version | version_compare("{{ grafana_version }}", "<"))

  - name: Download grafana deb file
    get_url:
      url = "https://grafana.s3.amazonaws.com/builds/{{ grafana_filename }}"
      dest = "/tmp/{{ grafana_filename }}"
    when: grafana_check_version.changed

  - name: Verify grafana deb file
    command: dpkg-deb -W --showformat='${version}' /tmp/{{ grafana_filename }}
    register: grafana_deb_check_version
    failed_when: grafana_deb_check_version.stdout != "{{ grafana_version }}"
    when: grafana_check_version.changed

  - name: Install grafana
    apt: deb= "/tmp/{{ grafana_filename }}" state=present
    when: grafana_check_version.changed
  

- hosts: prometheus
  become: yes
  become_user: root
  become_method: sudo
  roles:
    - prometheus

